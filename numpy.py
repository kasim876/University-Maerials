# шпаргалка по numpy

# основным обектом является numpy.ndarray. у массива есть две оси - вертикальная
# и горизонтальная

# создание массивов

import numpy as np;

numpy_array = np.array([[-15, 27, 38], [76, -13, 48]], int);
numpy_array = np.array([[-15, 27, 38], [76, -13, 48]], float);

print(numpy_array.shape); # форма массива, его размер
print(numpy_array.ndim); # число осей массива (измерений)
print(numpy_array.size); # общее количество элементов
print(numpy_array.dtype); # тип данных массива

numpy_array = np.zeros([3,2]); # матрица единиц
numpy_array = np.ones([3,2]); # матрица нулей
numpy_array = np.eye([3]); # единичная матрица
numpy_array = np.empty([3,2]); # матрица из случайных значений из пямяти
numpy_array = np.zeros([3,2], -5); # матрица заполненнная числом n
numpy_array = np.arange(5,10, 2); # создаёт массив из чисел от n до m с шагом x
numpy_array = np.tile([3,2], 5); # создаёт массив с повторяющимися числами x, y

# базовые операции над массивами

numpy_array = np.array([[-15, 27, 38], [76, -13, 48]], int);

print(numpy_array.sum()); # сумма всех элементов массива
print(numpy_array.min()); # минимальный элемент массива
print(numpy_array.max()); # максимальный элемент массива
print(numpy_array.mean()); # среднее значение

print(numpy_array.sum(axis = 0)); # сумма всех элементов в каждом столбце
print(numpy_array.sum(axis = 1)); # сумма всех элементов в каждой строке

# изменение размерности массива

numpy_array = np.array([-15, 27, 38, 76, -13, 48]);

print(arr.reshape(2,3)); # на основе массива выводит матрицу 2х3
print(arr.resize(2,3)); # существующий массив преобразует в матрицу 2х3

# объединение и разбиение массивов

# для объединения массивов в Numpy используется два метода hstack() и vstack()
# метод hstack() объединяет массивы о оси axis = 1, т.е. по горизонтали
# метод vstack() объединяет массивы о оси axis = 0, т.е. по вертикали

# для разбиения массивов в Numpy используется два метода hsplit() и vsplit()
# метод hsplit(arr, 2) разделяет массив равномерно горизонтально
# метод vsplit(arr, 2) разделяет массив вертикально. метод работает, если если количество строк в массиве больше 1 и кратно числу подмассивов

# сортировка массивов, индексы, срезы, итерирование

numpy_array = np.array([[-15, 27, 38], [76, -13, 48]]);

print(np.sort(numpy_array, axis = 0)); # сортирует массив по столбцам
print(np.sort(numpy_array, axis = 1)); # сортирует массив по строкам

print(numpy_array[1,1]); # обращение к элементу во втором столбце, второй строке
print(numpy_array[:,1]); # второй столбец
print(numpy_array[1,:]); # вторая строка

numpy_array = np.array([-15, 27, 38, 76, -13, 48]);

print(numpy_array[0]); # обращение к 1-му элементу
print(numpy_array[-1]); # обращение к последнему элементу

# операции над массивами

# + сложение элементов массива с числом или с элементами массива
# - вычитание элементов массива с числом или с элементами массива
# * умножение элементов массива на число или на элементы массива
# / деление элементов массива на число или на элементы массива
# // целочисленное деление элементов массива на число или на элементы массива
# % остаток деления элементов массива на число или элементы массива
# ** возведение элементов массива в степень (опр. число или элементы массива)




